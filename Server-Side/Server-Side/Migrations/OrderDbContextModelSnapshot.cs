// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server_Side.Model;

#nullable disable

namespace ServerSide.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("37689bcf-2c82-4b65-960e-9e93a09259b0"),
                            CreatedByUsername = "admin",
                            CreatedDate = new DateTime(2023, 1, 18, 12, 33, 15, 426, DateTimeKind.Local).AddTicks(9195),
                            CustomerName = "Kroger",
                            Type = 0
                        },
                        new
                        {
                            OrderId = new Guid("b6116f2a-2cbb-49a3-a6bd-b79a6562294f"),
                            CreatedByUsername = "user",
                            CreatedDate = new DateTime(2023, 1, 18, 12, 33, 15, 426, DateTimeKind.Local).AddTicks(9225),
                            CustomerName = "Taget",
                            Type = 1
                        },
                        new
                        {
                            OrderId = new Guid("2e7425b1-8368-449a-9ba5-3fdea067ca5f"),
                            CreatedByUsername = "admin3",
                            CreatedDate = new DateTime(2023, 1, 18, 12, 33, 15, 426, DateTimeKind.Local).AddTicks(9228),
                            CustomerName = "Apple",
                            Type = 2
                        },
                        new
                        {
                            OrderId = new Guid("cda14833-77ee-4a7a-bc23-b12f30b130ee"),
                            CreatedByUsername = "admin4",
                            CreatedDate = new DateTime(2023, 1, 18, 12, 33, 15, 426, DateTimeKind.Local).AddTicks(9231),
                            CustomerName = "Microsoft",
                            Type = 3
                        },
                        new
                        {
                            OrderId = new Guid("f3659478-b11d-49ae-b7e4-6b066be9c841"),
                            CreatedByUsername = "admin5",
                            CreatedDate = new DateTime(2023, 1, 18, 12, 33, 15, 426, DateTimeKind.Local).AddTicks(9234),
                            CustomerName = "Google",
                            Type = 4
                        });
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            PhoneNumber = "8126972996",
                            Role = "admin"
                        },
                        new
                        {
                            Username = "user",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "BPiZbadjt6lpsQKO4wB1aerzpjVIbdqyEdUSyFud+Ps=",
                            PhoneNumber = "8126972996",
                            Role = "user"
                        },
                        new
                        {
                            Username = "admin3",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            PhoneNumber = "8126972996",
                            Role = "user"
                        },
                        new
                        {
                            Username = "admin4",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            PhoneNumber = "8126972996",
                            Role = "user"
                        },
                        new
                        {
                            Username = "admin5",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            PhoneNumber = "8126972996",
                            Role = "user"
                        });
                });

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.HasOne("Server_Side.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
