// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server_Side.Model;

#nullable disable

namespace ServerSide.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230118163833_UserAuth")]
    partial class UserAuth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("6acbdf4f-fa96-4399-a339-22f591e5342a"),
                            CreatedByUsername = "admin",
                            CreatedDate = new DateTime(2023, 1, 18, 11, 38, 33, 568, DateTimeKind.Local).AddTicks(3355),
                            CustomerName = "Kroger",
                            Type = 0
                        },
                        new
                        {
                            OrderId = new Guid("629bf6a8-6df8-4a51-a900-2269f1a57b3c"),
                            CreatedByUsername = "user",
                            CreatedDate = new DateTime(2023, 1, 18, 11, 38, 33, 568, DateTimeKind.Local).AddTicks(3397),
                            CustomerName = "Taget",
                            Type = 1
                        },
                        new
                        {
                            OrderId = new Guid("33c73432-a1ba-4d56-80b1-1f794f2a23a1"),
                            CreatedByUsername = "admin3",
                            CreatedDate = new DateTime(2023, 1, 18, 11, 38, 33, 568, DateTimeKind.Local).AddTicks(3400),
                            CustomerName = "Apple",
                            Type = 2
                        },
                        new
                        {
                            OrderId = new Guid("5ad03ef0-6b42-4b8d-a941-29f3d2221f0b"),
                            CreatedByUsername = "admin4",
                            CreatedDate = new DateTime(2023, 1, 18, 11, 38, 33, 568, DateTimeKind.Local).AddTicks(3407),
                            CustomerName = "Microsoft",
                            Type = 3
                        },
                        new
                        {
                            OrderId = new Guid("4d03aafa-18ba-400d-aa63-32b0912670da"),
                            CreatedByUsername = "admin5",
                            CreatedDate = new DateTime(2023, 1, 18, 11, 38, 33, 568, DateTimeKind.Local).AddTicks(3410),
                            CustomerName = "Google",
                            Type = 4
                        });
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionLevel")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996",
                            Token = "62300401-243d-4080-8413-0a4c94b1baad"
                        },
                        new
                        {
                            Username = "user",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 1,
                            PhoneNumber = "8126972996",
                            Token = "d3cc750d-9a48-4bc4-8f4b-0b1c9c93be5b"
                        },
                        new
                        {
                            Username = "admin3",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996",
                            Token = "4ba26cbc-1c66-40a4-b085-5f52e9e64492"
                        },
                        new
                        {
                            Username = "admin4",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996",
                            Token = "db5876e4-96f8-41be-900f-ec775f6354a4"
                        },
                        new
                        {
                            Username = "admin5",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996",
                            Token = "f6c73e20-0e92-4c8d-a98d-a0e8c6b1e3dc"
                        });
                });

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.HasOne("Server_Side.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
