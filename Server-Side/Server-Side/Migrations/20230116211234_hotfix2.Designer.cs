// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server_Side.Model;

#nullable disable

namespace ServerSide.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230116211234_hotfix2")]
    partial class hotfix2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("54c9fcd0-a7fb-4c85-94c2-80c35bedee60"),
                            CreatedByUsername = "admin",
                            CreatedDate = new DateTime(2023, 1, 16, 16, 12, 33, 947, DateTimeKind.Local).AddTicks(1689),
                            CustomerName = "Kroger",
                            Type = 0
                        },
                        new
                        {
                            OrderId = new Guid("89334755-9dd8-4f65-9c75-2eb3285e99c2"),
                            CreatedByUsername = "user",
                            CreatedDate = new DateTime(2023, 1, 16, 16, 12, 33, 947, DateTimeKind.Local).AddTicks(1728),
                            CustomerName = "Taget",
                            Type = 1
                        },
                        new
                        {
                            OrderId = new Guid("e7e9fb43-ef8b-424c-9699-0881d38be0e1"),
                            CreatedByUsername = "admin3",
                            CreatedDate = new DateTime(2023, 1, 16, 16, 12, 33, 947, DateTimeKind.Local).AddTicks(1731),
                            CustomerName = "Apple",
                            Type = 2
                        },
                        new
                        {
                            OrderId = new Guid("14ed452a-1075-46a1-8270-93e66f5443bf"),
                            CreatedByUsername = "admin4",
                            CreatedDate = new DateTime(2023, 1, 16, 16, 12, 33, 947, DateTimeKind.Local).AddTicks(1735),
                            CustomerName = "Microsoft",
                            Type = 3
                        },
                        new
                        {
                            OrderId = new Guid("2138404a-86ad-4fb6-be2e-1dcc9afbbc33"),
                            CreatedByUsername = "admin5",
                            CreatedDate = new DateTime(2023, 1, 16, 16, 12, 33, 947, DateTimeKind.Local).AddTicks(1738),
                            CustomerName = "Google",
                            Type = 4
                        });
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionLevel")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "admin",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996"
                        },
                        new
                        {
                            Username = "user",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 1,
                            PhoneNumber = "8126972996"
                        },
                        new
                        {
                            Username = "admin3",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996"
                        },
                        new
                        {
                            Username = "admin4",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996"
                        },
                        new
                        {
                            Username = "admin5",
                            FirstName = "Bryan",
                            LastName = "Rodriguez",
                            PasswordHash = "admin",
                            PermissionLevel = 3,
                            PhoneNumber = "8126972996"
                        });
                });

            modelBuilder.Entity("Server_Side.Model.Order", b =>
                {
                    b.HasOne("Server_Side.Model.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("Username");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Server_Side.Model.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
